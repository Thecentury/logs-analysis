<UserControl x:Class="LogAnalyzer.GUI.Views.LogEntriesListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:local="clr-namespace:LogAnalyzer.GUI"
			 xmlns:views="clr-namespace:LogAnalyzer.GUI.Views" 
			 xmlns:Common="clr-namespace:LogAnalyzer.GUI.Common" mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

	<UserControl.InputBindings>
		<KeyBinding Command="{Binding ScrollPageDownCommand}" Key="PageDown"/>
		<KeyBinding Command="{Binding ScrollPageUpCommand}" Key="PageUp"/>

		<KeyBinding Command="{Binding ScrollToBottomCommand}" Key="End" Modifiers="Control"/>
		<KeyBinding Command="{Binding ScrollToTopCommand}" Key="Home" Modifiers="Control"/>

		<KeyBinding Command="{Binding ToggleAutoScrollToBottomCommand}" Key="Space"/>
	</UserControl.InputBindings>

	<UserControl.Resources>
		<SolidColorBrush Color="#99FFEE3A" x:Key="dynamicHighlightBrush"/>

		<local:PropertyNameToIsDynamicHighlightedConverter x:Key="propertyNameConverter"/>

		<!-- Базовый стиль ячейки - поддержка динамической подсветки -->
		<Style TargetType="DataGridCell" x:Key="cellDynamicHighlightStyle">

			<Setter Property="BorderThickness" Value="0"/>

			<Setter Property="local:DynamicHighlighting.IsHighlighted">
				<Setter.Value>
					<MultiBinding Converter="{StaticResource propertyNameConverter}" Mode="OneWay">
						<Binding Path="HighlightedColumnName" Mode="OneWay"/>
						<Binding Path="(local:DynamicHighlighting.PropertyName)" RelativeSource="{RelativeSource Mode=Self}" Mode="OneWay"/>
					</MultiBinding>
				</Setter.Value>
			</Setter>

			<Style.Triggers>

				<DataTrigger Binding="{Binding Path=(local:DynamicHighlighting.IsHighlighted), RelativeSource={RelativeSource Mode=Self}}" Value="True">
					<Setter Property="Background" Value="{StaticResource dynamicHighlightBrush}"/>
				</DataTrigger>

				<Trigger Property="IsFocused" Value="True">
					<Setter Property="BorderThickness" Value="1"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Стиль ячейки подсветки -->
		<DataTemplate x:Key="highlightedCellTemplate">
			<ItemsControl ItemsSource="{Binding HighlightedByList}" VerticalAlignment="Top">
				<ItemsControl.ItemTemplate>
					<DataTemplate>

						<Rectangle Width="10" Height="10" 
								   Fill="{Binding Brush}" Stroke="DarkGray" 
								   StrokeThickness="1" Margin="2"
								   ToolTip="{Binding Description}">
							<Rectangle.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Remove" Command="{Binding RemoveHighlightingCommand}">
										<MenuItem.Icon>
											<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/minus.png"/>
										</MenuItem.Icon>
									</MenuItem>
									<MenuItem Header="Edit" Command="{Binding ShowEditorCommand}">
										<MenuItem.Icon>
											<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/pencil.png"/>
										</MenuItem.Icon>
									</MenuItem>
								</ContextMenu>
							</Rectangle.ContextMenu>
						</Rectangle>

					</DataTemplate>
				</ItemsControl.ItemTemplate>
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel IsItemsHost="True" Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
		</DataTemplate>

		<!-- Стиль ячейки Type -->
		<Style TargetType="DataGridCell" x:Key="typeCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="Type"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Type}" Value="E">
					<Setter Property="Foreground" Value="White"/>
					<Setter Property="Background" Value="Red"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding Type}" Value="W">
					<Setter Property="Foreground" Value="Orange"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- Стиль ячейки Thread -->
		<Style TargetType="DataGridCell" x:Key="threadCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="ThreadId"/>
			<Setter Property="HorizontalContentAlignment" Value="Right"/>
		</Style>

		<!-- Стиль ячейки имени файла -->
		<Style TargetType="DataGridCell" x:Key="fileCellStyle">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="File.Name"/>
			<Setter Property="ToolTip" Value="{Binding File.Name}"/>
			<Setter Property="Background" Value="{Binding LogNameBackground}"/>

			<Setter Property="BorderThickness" Value="0"/>

			<Style.Triggers>
				<Trigger Property="IsFocused" Value="True">
					<Setter Property="BorderThickness" Value="1"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Стиль ячейки имени директории -->
		<Style TargetType="DataGridCell" x:Key="directoryCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="Directory.DisplayName"/>
			<Setter Property="ToolTip" Value="{Binding Directory.DisplayName}"/>
		</Style>

		<!-- Стиль ячейки времени -->
		<Style TargetType="DataGridCell" x:Key="timeCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="Time"/>
		</Style>

		<!-- Стиль строки -->
		<Style TargetType="DataGridRow" x:Key="rowStyle">

			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>

			<Setter Property="ContextMenu">
				<Setter.Value>
					<ContextMenu>

						<MenuItem Header="{Binding SelectFileInExplorerCommandHeader}" Command="{Binding SelectFileInExplorerCommand}"/>
						<MenuItem Header="{Binding OpenFolderInExplorerCommandHeader}" Command="{Binding OpenFolderInExplorerCommand}"/>

						<MenuItem Header="Create view for:">
							<MenuItem.Icon>
								<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/plus-circle.png"/>
							</MenuItem.Icon>

							<MenuItem Header="{Binding CreateThreadViewCommandHeader}" Command="{Binding CreateThreadViewCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/processor.png"/>
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="{Binding CreateFileNameViewCommandHeader}" Command="{Binding CreateFileNameViewCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/documents-stack.png"/>
								</MenuItem.Icon>
							</MenuItem>
							<Separator/>
							<MenuItem Header="{Binding CreateViewForFileCommandHeader}" Command="{Binding CreateFileViewCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/document-text.png"/>
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="{Binding CreateViewForDirectoryCommandHeader}" Command="{Binding CreateDirectoryViewCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/folder-horizontal.png"/>
								</MenuItem.Icon>
							</MenuItem>
							<MenuItem Header="{Binding CreateMessageTypeViewCommandHeader}" Command="{Binding CreateMessageTypeViewCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/burn.png"/>
								</MenuItem.Icon>
							</MenuItem>
						</MenuItem>

						<MenuItem Header="Exclude:">
							<MenuItem.Icon>
								<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/funnel.png"/>
							</MenuItem.Icon>

							<MenuItem Header="{Binding ExcludeByCertainFileCommandHeader}" Command="{Binding ExcludeByCertainFileCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/document-text.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding ExcludeByFilenameCommandHeader}" Command="{Binding ExcludeByFilenameCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/documents-stack.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding ExcludeByThreadIdCommandHeader}" Command="{Binding ExcludeByThreadIdCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/processor.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding ExcludeDirectoryCommandHeader}" Command="{Binding ExcludeDirectoryCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/folder-horizontal.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding ExcludeByMessageTypeCommandHeader}" Command="{Binding ExcludeByMessageTypeCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/burn.png"/>
								</MenuItem.Icon>
							</MenuItem>
						</MenuItem>

						<MenuItem Header="Highlight by:">
							<MenuItem.Icon>
								<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/flag.png"/>
							</MenuItem.Icon>

							<MenuItem Header="{Binding HighlightByCertainFileCommandHeader}" Command="{Binding HighlightByCertainFileCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/document-text.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding HighlightByFilenameCommandHeader}" Command="{Binding HighlightByFilenameCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/documents-stack.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding HighlightByThreadIdCommandHeader}" Command="{Binding HighlightByThreadIdCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/processor.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding HighlightDirectoryCommandHeader}" Command="{Binding HighlightDirectoryCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/folder-horizontal.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="{Binding HighlightByMessageTypeCommandHeader}" Command="{Binding HighlightByMessageTypeCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/burn.png"/>
								</MenuItem.Icon>
							</MenuItem>
						</MenuItem>

						<MenuItem Header="Copy to Clipboard:">
							<MenuItem.Icon>
								<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/document-copy.png"/>
							</MenuItem.Icon>

							<MenuItem Header="File Name" Command="{Binding CopyFileNameCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/disk.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="Full path" Command="{Binding CopyFullPathCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/document-text.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="File location" Command="{Binding CopyFileLocationCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/folder-horizontal.png"/>
								</MenuItem.Icon>
							</MenuItem>

							<MenuItem Header="Message" Command="{Binding CopyMessageCommand}">
								<MenuItem.Icon>
									<Image Source="pack://application:,,,/LogAnalyzer.GUI;component/Resources/sticky-note.png"/>
								</MenuItem.Icon>
							</MenuItem>
						</MenuItem>

						<MenuItem Header="Show in parent view:" ItemsSource="{Binding ParentTabViews}" Visibility="{Binding ShowInParentViewVisibility, Mode=OneTime}" >
							<MenuItem.ItemContainerStyle>
								<Style TargetType="MenuItem">
									<Setter Property="Command" Value="{Binding Command}"/>
									<Setter Property="Header" Value="{Binding Header}"/>
									<Setter Property="ToolTip" Value="{Binding Tooltip}"/>
									<Setter Property="Icon">
										<Setter.Value>
											<Image Source="{Binding IconSource}" Stretch="None"/>
										</Setter.Value>
									</Setter>
								</Style>
							</MenuItem.ItemContainerStyle>
						</MenuItem>

					</ContextMenu>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="DataGrid" x:Key="dataGridStyle">
			<Style.Resources>
				<!--Более приятные для меня цвета-->
				<!-- SelectedItem with focus -->
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#3330AFFF" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#7730AFFF" />-->
				<!-- SelectedItem without focus -->
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#3330AFFF" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#7730AFFF" />-->
				<!-- SelectedItem text foreground -->
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />-->
			</Style.Resources>

			<Setter Property="CanUserDeleteRows" Value="False"/>
			<Setter Property="CanUserAddRows" Value="False"/>
			<Setter Property="CanUserSortColumns" Value="False"/>
			<Setter Property="CanUserResizeRows" Value="False"/>
			<Setter Property="CanUserReorderColumns" Value="False"/>
			<Setter Property="IsReadOnly" Value="True"/>
			<Setter Property="EnableRowVirtualization" Value="True"/>
			<Setter Property="AutoGenerateColumns" Value="False"/>

			<Setter Property="ClipboardCopyMode" Value="ExcludeHeader"/>

			<Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
			<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
			<Setter Property="GridLinesVisibility" Value="None"/>

			<Setter Property="FontFamily" Value="Consolas"/>

			<Setter Property="RowStyle" Value="{StaticResource rowStyle}"/>

			<Setter Property="SelectedValue" Value="{Binding SelectedEntry}"/>
			<Setter Property="SelectedIndex" Value="{Binding SelectedEntryIndex}"/>
		</Style>

		<DataTemplate x:Key="textCellTemplate">
			<Control Template="{Binding Template}"
					 DataContext="{Binding TemplateContext}"/>
		</DataTemplate>

	</UserControl.Resources>

	<DockPanel LastChildFill="True">

		<DockPanel DockPanel.Dock="Top" LastChildFill="True">
			<views:SearchControl DockPanel.Dock="Right" DataContext="{Binding SearchViewModel}"/>
			<ToolBar DockPanel.Dock="Left" Margin="4,4,4,4" ItemsSource="{Binding ToolbarItems}"/>
		</DockPanel>

		<views:StatusBar DockPanel.Dock="Bottom"/>

		<Image Source="{Binding DensityImage}" DockPanel.Dock="Right" Width="20" Stretch="Fill" Margin="0,22,0,0"/>
		<Image Source="{Binding MessageTypeImage}" DockPanel.Dock="Right" Width="20" Stretch="Fill" Margin="0,22,0,0"/>

		<DataGrid ItemsSource="{Binding EntriesView}"  
				  Name="entriesDataGrid"
				  DataContextChanged="DataGrid_DataContextChanged"
				  BorderBrush="{x:Null}" BorderThickness="0"
				  Style="{StaticResource dataGridStyle}"
				  >

			<Common:AttachedCommandBehaviour.Bindings>
				<Common:AttachedCommandBinding Command="{Binding GotFocusCommand}" Event="GotFocus" />
				<Common:AttachedCommandBinding Command="{Binding LoadedCommand}" Event="Loaded"/>
			</Common:AttachedCommandBehaviour.Bindings>

			<DataGrid.Columns>
				<DataGridTemplateColumn CellTemplate="{StaticResource highlightedCellTemplate}"/>

				<DataGridTextColumn Header="T" Binding="{Binding Type}" Width="20" CellStyle="{StaticResource typeCellStyle}"/>

				<DataGridTextColumn Header="File" Binding="{Binding File.Name}" Width="150" CellStyle="{StaticResource fileCellStyle}"/>

				<DataGridTextColumn Header="Directory" x:Name="directoryColumn"
									Binding="{Binding Directory.DisplayName}" Width="80" CellStyle="{StaticResource directoryCellStyle}"/>

				<DataGridTextColumn Header="Thread" Binding="{Binding ThreadId, StringFormat='{}{0,3}'}" 
									CellStyle="{StaticResource threadCellStyle}" 
									Width="40"/>

				<!--<DataGridTextColumn Header="#" Binding="{Binding IndexInFile}" Width="45"/>-->
				<DataGridTextColumn Header="Time" Binding="{Binding Time, StringFormat=dd.MM HH:mm:ss}" Width="120"
									CellStyle="{StaticResource timeCellStyle}"/>

				<DataGridTemplateColumn Header="Text" Width="*" CellTemplate="{StaticResource textCellTemplate}"/>

				<!--<DataGridTextColumn Header="IsDynamicHighlighted" Binding="{Binding IsDynamicHighlighted}" Width="40"/>-->
				<!--<DataGridTextColumn Header="ColumnName" Binding="{Binding HighlightedColumnName}" Width="60"/>-->
			</DataGrid.Columns>
		</DataGrid>

	</DockPanel>
</UserControl>
