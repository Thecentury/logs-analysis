<UserControl x:Class="LogAnalyzer.GUI.Views.LogEntriesListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 
			 xmlns:core="clr-namespace:LogAnalyzer;assembly=LogAnalyzer"
			 xmlns:vm="clr-namespace:LogAnalyzer.GUI.ViewModel"
			 xmlns:view="clr-namespace:LogAnalyzer.GUI.View"
			 xmlns:local="clr-namespace:LogAnalyzer.GUI"
			 
			 xmlns:cmn="http://adtech-dev.com/Common" xmlns:Views="clr-namespace:LogAnalyzer.GUI.Views" mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

	<UserControl.Resources>

		<SolidColorBrush Color="#FFEE3A" x:Key="dynamicHighlightBrush"/>

		<local:PropertyNameToIsDynamicHighlightedConverter x:Key="propertyNameConverter"/>

		<!-- Базовый стиль ячейки - поддержка динамической подсветки -->
		<Style TargetType="DataGridCell" x:Key="cellDynamicHighlightStyle">

			<Setter Property="BorderThickness" Value="0"/>

			<Setter Property="local:DynamicHighlighting.IsHighlighted">
				<Setter.Value>
					<MultiBinding Converter="{StaticResource propertyNameConverter}" Mode="OneWay">
						<Binding Path="HighlightedColumnName" Mode="OneWay"/>
						<Binding Path="(local:DynamicHighlighting.PropertyName)" RelativeSource="{RelativeSource Mode=Self}" Mode="OneWay"/>
					</MultiBinding>
				</Setter.Value>
			</Setter>

			<Style.Triggers>

				<DataTrigger Binding="{Binding Path=(local:DynamicHighlighting.IsHighlighted), RelativeSource={RelativeSource Mode=Self}}" Value="True">
					<Setter Property="Background" Value="{StaticResource dynamicHighlightBrush}"/>
				</DataTrigger>

				<Trigger Property="IsFocused" Value="True">
					<Setter Property="BorderThickness" Value="1"/>
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Стиль ячейки Type -->
		<Style TargetType="DataGridCell" x:Key="typeCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="Type"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Type}" Value="E">
					<Setter Property="Foreground" Value="White"/>
					<Setter Property="Background" Value="Red"/>
				</DataTrigger>
				<DataTrigger Binding="{Binding Type}" Value="W">
					<Setter Property="Foreground" Value="Orange"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>

		<!-- Стиль ячейки Thread -->
		<Style TargetType="DataGridCell" x:Key="threadCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="ThreadId"/>
			<Setter Property="HorizontalContentAlignment" Value="Right"/>
		</Style>

		<!-- Стиль ячейки имени файла -->
		<Style TargetType="DataGridCell" x:Key="fileCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="File.Name"/>
			<Setter Property="ToolTip" Value="{Binding File.Name}"/>
		</Style>

		<!-- Стиль ячейки имени директории -->
		<Style TargetType="DataGridCell" x:Key="directoryCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="Directory.DisplayName"/>
			<Setter Property="ToolTip" Value="{Binding Directory.DisplayName}"/>
		</Style>

		<!-- Стиль ячейки времени -->
		<Style TargetType="DataGridCell" x:Key="timeCellStyle" BasedOn="{StaticResource cellDynamicHighlightStyle}">
			<Setter Property="local:DynamicHighlighting.PropertyName" Value="Time"/>
		</Style>

		<!-- Стиль строки -->
		<Style TargetType="DataGridRow" x:Key="rowStyle">

			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>

			<Setter Property="ContextMenu">
				<Setter.Value>
					<ContextMenu>
						<MenuItem Header="{Binding SelectFileInExplorerCommandHeader}" Command="{Binding SelectFileInExplorerCommand}"/>
						<MenuItem Header="{Binding OpenFolderInExplorerCommandHeader}" Command="{Binding OpenFolderInExplorerCommand}"/>
						<MenuItem Header="Create view for:">
							<MenuItem Header="{Binding CreateThreadViewCommandHeader}" Command="{Binding CreateThreadViewCommand}"/>
							<MenuItem Header="{Binding CreateFileNameViewCommandHeader}" Command="{Binding CreateFileNameViewCommand}"/>
							<Separator/>
							<MenuItem Header="{Binding CreateViewForFileCommandHeader}" Command="{Binding CreateFileViewCommand}"/>
							<MenuItem Header="{Binding CreateViewForDirectoryCommandHeader}" Command="{Binding CreateDirectoryViewCommand}"/>
						</MenuItem>
					</ContextMenu>
				</Setter.Value>
			</Setter>

			<!--<Style.Triggers>
				<DataTrigger Binding="{Binding IsDynamicHighlighted}" Value="True">
					<Setter Property="Background" Value="{StaticResource dynamicHighlightBrush}"/>
				</DataTrigger>
			</Style.Triggers>-->
		</Style>

		<Style TargetType="DataGrid" x:Key="dataGridStyle">
			<Style.Resources>
				<!--Более приятные для меня цвета-->
				<!-- SelectedItem with focus -->
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#7730AFFF" />-->
				<!-- SelectedItem without focus -->
				<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="#7730AFFF" />-->
				<!-- SelectedItem text foreground -->
				<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
				<!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />-->
			</Style.Resources>

			<Setter Property="CanUserDeleteRows" Value="False"/>
			<Setter Property="CanUserAddRows" Value="False"/>
			<Setter Property="CanUserSortColumns" Value="False"/>
			<Setter Property="CanUserResizeRows" Value="False"/>
			<Setter Property="CanUserReorderColumns" Value="False"/>
			<Setter Property="IsReadOnly" Value="True"/>
			<Setter Property="EnableRowVirtualization" Value="True"/>
			<Setter Property="AutoGenerateColumns" Value="False"/>

			<!--todo это надо?-->
			<Setter Property="ClipboardCopyMode" Value="ExcludeHeader"/>

			<Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
			<Setter Property="VirtualizingStackPanel.VirtualizationMode" Value="Recycling"/>
			<Setter Property="GridLinesVisibility" Value="None"/>

			<Setter Property="FontFamily" Value="Consolas"/>

			<Setter Property="RowStyle" Value="{StaticResource rowStyle}"/>

			<Setter Property="SelectedValue" Value="{Binding SelectedEntry}"/>
			<Setter Property="SelectedIndex" Value="{Binding SelectedEntryIndex}"/>
		</Style>

		<DataTemplate x:Key="textCellTemplate">
			<ContentControl Content="{Binding}">

				<ContentControl.Resources>

					<ControlTemplate TargetType="ContentControl" x:Key="textTemplate">
						<TextBox Text="{Binding UnitedText, Mode=OneWay}" 
						 IsReadOnly="True" TextWrapping="Wrap"
						 BorderBrush="{x:Null}" BorderThickness="0"/>
					</ControlTemplate>

					<ControlTemplate TargetType="ContentControl" x:Key="exceptionCellTemplate">
						<Views:ExceptionView DataContext="{Binding LinesView}"/>
					</ControlTemplate>

				</ContentControl.Resources>

				<ContentControl.Style>
					<Style TargetType="ContentControl">
						<!--todo включить-->
						<!--<Style.Triggers>
							<DataTrigger Binding="{Binding IsException}" Value="True">
								<Setter Property="Template" Value="{StaticResource exceptionCellTemplate}"/>
							</DataTrigger>
							</Style.Triggers>-->
						<Setter Property="Template" Value="{StaticResource textTemplate}"/>
					</Style>
				</ContentControl.Style>
			</ContentControl>
		</DataTemplate>

	</UserControl.Resources>

	<DockPanel LastChildFill="True">

		<Views:StatusBar DockPanel.Dock="Bottom"/>

		<DataGrid ItemsSource="{Binding EntriesView}" 
				  BorderBrush="{x:Null}" BorderThickness="0"
				  Style="{StaticResource dataGridStyle}"
				  >

			<cmn:AttachedCommandBehaviour.Bindings>
				<cmn:AttachedCommandBinding Command="{Binding GotFocusCommand}" Event="GotFocus" />
			</cmn:AttachedCommandBehaviour.Bindings>

			<DataGrid.Columns>
				<DataGridTextColumn Header="T" Binding="{Binding Type}" Width="20" CellStyle="{StaticResource typeCellStyle}"/>
				<DataGridTextColumn Header="File" Binding="{Binding File.Name}" Width="150" CellStyle="{StaticResource fileCellStyle}"/>
				<DataGridTextColumn Header="Directory" Binding="{Binding Directory.DisplayName}" Width="80" CellStyle="{StaticResource directoryCellStyle}"/>
				<DataGridTextColumn Header="Thread" Binding="{Binding ThreadId, StringFormat='{}{0,3}'}" CellStyle="{StaticResource threadCellStyle}" 
									Width="40"/>
				<!--<DataGridTextColumn Header="#" Binding="{Binding IndexInFile}" Width="45"/>-->
				<DataGridTextColumn Header="Time" Binding="{Binding Time, StringFormat=dd.MM HH:mm:ss}" Width="100"
									CellStyle="{StaticResource timeCellStyle}"/>
				<DataGridTemplateColumn Header="Text" Width="Auto" CellTemplate="{StaticResource textCellTemplate}"/>

				<!--<DataGridTextColumn Header="IsDynamicHighlighted" Binding="{Binding IsDynamicHighlighted}" Width="40"/>-->
				<!--<DataGridTextColumn Header="ColumnName" Binding="{Binding HighlightedColumnName}" Width="60"/>-->
			</DataGrid.Columns>
		</DataGrid>

	</DockPanel>
</UserControl>
